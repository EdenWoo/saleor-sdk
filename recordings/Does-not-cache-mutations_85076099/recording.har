{
  "log": {
    "_recordingName": "Does not cache mutations",
    "creator": {
      "comment": "persister:fs",
      "name": "Polly.JS",
      "version": "4.3.0"
    },
    "entries": [
      {
        "_id": "1d028a7eb4d46beca04ef383963b1829",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 1198,
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "1198"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "localhost:8000"
            }
          ],
          "headersSize": 255,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "[{\"operationName\":\"SetPassword\",\"variables\":{\"email\":\"admin@example.com\",\"password\":\"admin12345678\",\"token\":\"5hr-73a06b70fd6ad8ab3913\"},\"query\":\"fragment Address on Address {\\n  id\\n  firstName\\n  lastName\\n  companyName\\n  streetAddress1\\n  streetAddress2\\n  city\\n  postalCode\\n  country {\\n    code\\n    country\\n    __typename\\n  }\\n  countryArea\\n  phone\\n  isDefaultBillingAddress\\n  isDefaultShippingAddress\\n  __typename\\n}\\n\\nfragment User on User {\\n  id\\n  email\\n  firstName\\n  lastName\\n  isStaff\\n  defaultShippingAddress {\\n    ...Address\\n    __typename\\n  }\\n  defaultBillingAddress {\\n    ...Address\\n    __typename\\n  }\\n  addresses {\\n    ...Address\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment AccountError on AccountError {\\n  code\\n  field\\n  message\\n  __typename\\n}\\n\\nmutation SetPassword($token: String!, $email: String!, $password: String!) {\\n  setPassword(token: $token, email: $email, password: $password) {\\n    errors: accountErrors {\\n      ...AccountError\\n      __typename\\n    }\\n    token\\n    user {\\n      ...User\\n      __typename\\n    }\\n    accountErrors {\\n      field\\n      message\\n      code\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}]"
          },
          "queryString": [],
          "url": "http://localhost:8000/graphql/"
        },
        "response": {
          "bodySize": 336,
          "content": {
            "mimeType": "application/json",
            "size": 336,
            "text": "[{\"data\": {\"setPassword\": {\"errors\": [{\"code\": \"INVALID\", \"field\": \"token\", \"message\": \"Invalid or expired token.\", \"__typename\": \"AccountError\"}], \"token\": null, \"user\": null, \"accountErrors\": [{\"field\": \"token\", \"message\": \"Invalid or expired token.\", \"code\": \"INVALID\", \"__typename\": \"AccountError\"}], \"__typename\": \"SetPassword\"}}}]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Thu, 30 Jul 2020 09:42:50 GMT"
            },
            {
              "name": "server",
              "value": "WSGIServer/0.2 CPython/3.8.1"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:9000"
            },
            {
              "name": "access-control-allow-methods",
              "value": "POST, OPTIONS"
            },
            {
              "name": "access-control-allow-headers",
              "value": "Origin, Content-Type, Accept, Authorization"
            },
            {
              "name": "content-length",
              "value": "336"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            }
          ],
          "headersSize": 335,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-07-30T09:42:50.354Z",
        "time": 24,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 24
        }
      },
      {
        "_id": "c66f63da91112815925684beb6a93fca",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 457,
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "457"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "localhost:8000"
            }
          ],
          "headersSize": 254,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "[{\"operationName\":\"PasswordChange\",\"variables\":{\"newPassword\":\"admin12345678\",\"oldPassword\":\"admin12345678\"},\"query\":\"fragment AccountError on AccountError {\\n  code\\n  field\\n  message\\n  __typename\\n}\\n\\nmutation PasswordChange($newPassword: String!, $oldPassword: String!) {\\n  passwordChange(newPassword: $newPassword, oldPassword: $oldPassword) {\\n    errors: accountErrors {\\n      ...AccountError\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}]"
          },
          "queryString": [],
          "url": "http://localhost:8000/graphql/"
        },
        "response": {
          "bodySize": 1027,
          "content": {
            "mimeType": "application/json",
            "size": 1027,
            "text": "[{\"errors\": [{\"message\": \"You do not have permission to perform this action\", \"locations\": [{\"line\": 9, \"column\": 3}], \"path\": [\"passwordChange\"], \"extensions\": {\"exception\": {\"code\": \"PermissionDenied\", \"stacktrace\": [\"Traceback (most recent call last):\", \"  File \\\"/Users/anders/.pyenv/versions/saleor/lib/python3.8/site-packages/promise/promise.py\\\", line 489, in _resolve_from_executor\", \"    executor(resolve, reject)\", \"  File \\\"/Users/anders/.pyenv/versions/saleor/lib/python3.8/site-packages/promise/promise.py\\\", line 756, in executor\", \"    return resolve(f(*args, **kwargs))\", \"  File \\\"/Users/anders/.pyenv/versions/saleor/lib/python3.8/site-packages/graphql/execution/middleware.py\\\", line 75, in make_it_promise\", \"    return next(*args, **kwargs)\", \"  File \\\"/Users/anders/projects/saleor/saleor/graphql/core/mutations.py\\\", line 272, in mutate\", \"    raise PermissionDenied()\", \"saleor.core.exceptions.PermissionDenied: You do not have permission to perform this action\"]}}}], \"data\": {\"passwordChange\": null}}]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Thu, 30 Jul 2020 09:42:50 GMT"
            },
            {
              "name": "server",
              "value": "WSGIServer/0.2 CPython/3.8.1"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "access-control-allow-origin",
              "value": "http://localhost:9000"
            },
            {
              "name": "access-control-allow-methods",
              "value": "POST, OPTIONS"
            },
            {
              "name": "access-control-allow-headers",
              "value": "Origin, Content-Type, Accept, Authorization"
            },
            {
              "name": "content-length",
              "value": "1027"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            }
          ],
          "headersSize": 336,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-07-30T09:42:50.393Z",
        "time": 11,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 11
        }
      },
      {
        "_id": "16573134093bc1127b205debc7eb022e",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 495,
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "495"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "localhost:8000"
            }
          ],
          "headersSize": 254,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "[{\"operationName\":\"TokenAuth\",\"variables\":{\"email\":\"admin@example.com\",\"password\":\"admin\"},\"query\":\"fragment AccountError on AccountError {\\n  code\\n  field\\n  message\\n  __typename\\n}\\n\\nmutation TokenAuth($email: String!, $password: String!) {\\n  tokenCreate(email: $email, password: $password) {\\n    csrfToken\\n    refreshToken\\n    token\\n    errors: accountErrors {\\n      ...AccountError\\n      __typename\\n    }\\n    user {\\n      id\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}]"
          },
          "queryString": [],
          "url": "http://localhost:8000/graphql/"
        },
        "response": {
          "bodySize": 891,
          "content": {
            "mimeType": "application/json",
            "size": 891,
            "text": "[{\"data\": {\"tokenCreate\": {\"csrfToken\": \"1oE8f6IWFzN64B2a36eqC8SVBuD77ulNmg8RuFdElnL0TXZ2MOzOdI7UBMuXUKWi\", \"refreshToken\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTc2NzM0OTEsImV4cCI6MTYwMDI2NTQ5MSwidG9rZW4iOiJ6U0dVdUtVY2hQWDIiLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwidHlwZSI6InJlZnJlc2giLCJ1c2VyX2lkIjoiVlhObGNqb3lOQT09IiwiaXNfc3RhZmYiOnRydWUsImNzcmZUb2tlbiI6IjFvRThmNklXRnpONjRCMmEzNmVxQzhTVkJ1RDc3dWxObWc4UnVGZEVsbkwwVFhaMk1Pek9kSTdVQk11WFVLV2kifQ.4tCzpwi02NmxyzLgshB5F_P7xtLzCF3cQAL6PVzTCpo\", \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTc2NzM0OTEsImV4cCI6MTU5NzY3Mzc5MSwidG9rZW4iOiJ6U0dVdUtVY2hQWDIiLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwidHlwZSI6ImFjY2VzcyIsInVzZXJfaWQiOiJWWE5sY2pveU5BPT0iLCJpc19zdGFmZiI6dHJ1ZX0.AvtT_oxbadont4DTkhB6eZHLK0h4s7ncyBXxx13cBqQ\", \"errors\": [], \"user\": {\"id\": \"VXNlcjoyNA==\", \"__typename\": \"User\"}, \"__typename\": \"CreateToken\"}}}]"
          },
          "cookies": [
            {
              "httpOnly": true,
              "name": "refreshToken",
              "path": "/",
              "secure": true,
              "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTc2NzM0OTEsImV4cCI6MTYwMDI2NTQ5MSwidG9rZW4iOiJ6U0dVdUtVY2hQWDIiLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwidHlwZSI6InJlZnJlc2giLCJ1c2VyX2lkIjoiVlhObGNqb3lOQT09IiwiaXNfc3RhZmYiOnRydWUsImNzcmZUb2tlbiI6IjFvRThmNklXRnpONjRCMmEzNmVxQzhTVkJ1RDc3dWxObWc4UnVGZEVsbkwwVFhaMk1Pek9kSTdVQk11WFVLV2kifQ.4tCzpwi02NmxyzLgshB5F_P7xtLzCF3cQAL6PVzTCpo"
            }
          ],
          "headers": [
            {
              "name": "date",
              "value": "Mon, 17 Aug 2020 14:11:31 GMT"
            },
            {
              "name": "server",
              "value": "WSGIServer/0.2 CPython/3.8.3"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "891"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "referrer-policy",
              "value": "same-origin"
            },
            {
              "_fromType": "array",
              "name": "set-cookie",
              "value": "refreshToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTc2NzM0OTEsImV4cCI6MTYwMDI2NTQ5MSwidG9rZW4iOiJ6U0dVdUtVY2hQWDIiLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwidHlwZSI6InJlZnJlc2giLCJ1c2VyX2lkIjoiVlhObGNqb3lOQT09IiwiaXNfc3RhZmYiOnRydWUsImNzcmZUb2tlbiI6IjFvRThmNklXRnpONjRCMmEzNmVxQzhTVkJ1RDc3dWxObWc4UnVGZEVsbkwwVFhaMk1Pek9kSTdVQk11WFVLV2kifQ.4tCzpwi02NmxyzLgshB5F_P7xtLzCF3cQAL6PVzTCpo; HttpOnly; Path=/; Secure"
            }
          ],
          "headersSize": 625,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-08-17T14:11:31.837Z",
        "time": 147,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 147
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}
